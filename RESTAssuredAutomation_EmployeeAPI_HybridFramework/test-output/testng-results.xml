<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="19" passed="17" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-05-14T08:37:10Z" name="restassuredtestsuite" finished-at="2020-05-14T08:37:39Z" duration-ms="29145">
    <groups>
    </groups>
    <test started-at="2020-05-14T08:37:10Z" name="restassuredtest" finished-at="2020-05-14T08:37:39Z" duration-ms="29145">
      <class name="com.employeeapi.testcases.TC005_DELETE_Employee_Record">
        <test-method is-config="true" signature="deleteEmployee()[pri:0, instance:com.employeeapi.testcases.TC005_DELETE_Employee_Record@2667f029]" started-at="2020-05-14T01:37:28Z" name="deleteEmployee" finished-at="2020-05-14T01:37:39Z" duration-ms="11027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmployee -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC005_DELETE_Employee_Record@2667f029]" started-at="2020-05-14T01:37:39Z" name="checkResponseBody" finished-at="2020-05-14T01:37:39Z" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:286)
	at org.testng.Assert.assertEquals(Assert.java:296)
	at com.employeeapi.testcases.TC005_DELETE_Employee_Record.checkResponseBody(TC005_DELETE_Employee_Record.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
      </class> <!-- com.employeeapi.testcases.TC005_DELETE_Employee_Record -->
      <class name="com.employeeapi.testcases.TC001_GET_All_Employees">
        <test-method is-config="true" signature="getAllEmployees()[pri:0, instance:com.employeeapi.testcases.TC001_GET_All_Employees@5e82df6a]" started-at="2020-05-14T01:37:10Z" name="getAllEmployees" finished-at="2020-05-14T01:37:11Z" duration-ms="1311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method signature="checkContentCoding()[pri:0, instance:com.employeeapi.testcases.TC001_GET_All_Employees@5e82df6a]" started-at="2020-05-14T01:37:11Z" name="checkContentCoding" finished-at="2020-05-14T01:37:11Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentCoding -->
        <test-method signature="checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC001_GET_All_Employees@5e82df6a]" started-at="2020-05-14T01:37:11Z" name="checkContentLength" finished-at="2020-05-14T01:37:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC001_GET_All_Employees@5e82df6a]" started-at="2020-05-14T01:37:11Z" name="checkContentType" finished-at="2020-05-14T01:37:11Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkCookies()[pri:0, instance:com.employeeapi.testcases.TC001_GET_All_Employees@5e82df6a]" started-at="2020-05-14T01:37:11Z" name="checkCookies" finished-at="2020-05-14T01:37:11Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC001_GET_All_Employees@5e82df6a]" started-at="2020-05-14T01:37:11Z" name="checkResponseBody" finished-at="2020-05-14T01:37:12Z" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC001_GET_All_Employees@5e82df6a]" started-at="2020-05-14T01:37:12Z" name="checkResponseTime" finished-at="2020-05-14T01:37:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkServerType()[pri:0, instance:com.employeeapi.testcases.TC001_GET_All_Employees@5e82df6a]" started-at="2020-05-14T01:37:12Z" name="checkServerType" finished-at="2020-05-14T01:37:12Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method signature="checkStatus()[pri:0, instance:com.employeeapi.testcases.TC001_GET_All_Employees@5e82df6a]" started-at="2020-05-14T01:37:12Z" name="checkStatus" finished-at="2020-05-14T01:37:12Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatus -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC001_GET_All_Employees@5e82df6a]" started-at="2020-05-14T01:37:12Z" name="checkStatusLine" finished-at="2020-05-14T01:37:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC001_GET_All_Employees@5e82df6a]" started-at="2020-05-14T01:37:12Z" name="tearDown" finished-at="2020-05-14T01:37:12Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testcases.TC001_GET_All_Employees -->
      <class name="com.employeeapi.testcases.TC002_GET_Single_Employee_Record">
        <test-method is-config="true" signature="getEmployeeData()[pri:0, instance:com.employeeapi.testcases.TC002_GET_Single_Employee_Record@4facf68f]" started-at="2020-05-14T01:37:12Z" name="getEmployeeData" finished-at="2020-05-14T01:37:17Z" duration-ms="5482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployeeData -->
        <test-method signature="checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC002_GET_Single_Employee_Record@4facf68f]" started-at="2020-05-14T01:37:17Z" name="checkContentLength" finished-at="2020-05-14T01:37:17Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC002_GET_Single_Employee_Record@4facf68f]" started-at="2020-05-14T01:37:17Z" name="checkResponseBody" finished-at="2020-05-14T01:37:17Z" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:286)
	at org.testng.Assert.assertEquals(Assert.java:296)
	at com.employeeapi.testcases.TC002_GET_Single_Employee_Record.checkResponseBody(TC002_GET_Single_Employee_Record.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC002_GET_Single_Employee_Record@4facf68f]" started-at="2020-05-14T01:37:17Z" name="checkResponseTime" finished-at="2020-05-14T01:37:17Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkServerType()[pri:0, instance:com.employeeapi.testcases.TC002_GET_Single_Employee_Record@4facf68f]" started-at="2020-05-14T01:37:17Z" name="checkServerType" finished-at="2020-05-14T01:37:17Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC002_GET_Single_Employee_Record@4facf68f]" started-at="2020-05-14T01:37:17Z" name="checkStatusCode" finished-at="2020-05-14T01:37:17Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC002_GET_Single_Employee_Record@4facf68f]" started-at="2020-05-14T01:37:17Z" name="tearDown" finished-at="2020-05-14T01:37:17Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testcases.TC002_GET_Single_Employee_Record -->
      <class name="com.employeeapi.testcases.TC003_POST_Employee_Record">
        <test-method is-config="true" signature="createEmployee()[pri:0, instance:com.employeeapi.testcases.TC003_POST_Employee_Record@7a69b07]" started-at="2020-05-14T01:37:17Z" name="createEmployee" finished-at="2020-05-14T01:37:22Z" duration-ms="5456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC003_POST_Employee_Record@7a69b07]" started-at="2020-05-14T01:37:22Z" name="checkResponseBody" finished-at="2020-05-14T01:37:23Z" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC003_POST_Employee_Record@7a69b07]" started-at="2020-05-14T01:37:23Z" name="checkStatusCode" finished-at="2020-05-14T01:37:23Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC003_POST_Employee_Record@7a69b07]" started-at="2020-05-14T01:37:23Z" name="tearDown" finished-at="2020-05-14T01:37:23Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testcases.TC003_POST_Employee_Record -->
      <class name="com.employeeapi.testcases.TC004_PUT_Employee_Record">
        <test-method is-config="true" signature="updateEmployee()[pri:0, instance:com.employeeapi.testcases.TC004_PUT_Employee_Record@4ac3c60d]" started-at="2020-05-14T01:37:23Z" name="updateEmployee" finished-at="2020-05-14T01:37:28Z" duration-ms="5468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployee -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC004_PUT_Employee_Record@4ac3c60d]" started-at="2020-05-14T01:37:28Z" name="checkStatusCode" finished-at="2020-05-14T01:37:28Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC004_PUT_Employee_Record@4ac3c60d]" started-at="2020-05-14T01:37:28Z" name="checkStatusLine" finished-at="2020-05-14T01:37:28Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- com.employeeapi.testcases.TC004_PUT_Employee_Record -->
    </test> <!-- restassuredtest -->
  </suite> <!-- restassuredtestsuite -->
</testng-results>
